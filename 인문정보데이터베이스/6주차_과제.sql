use s_haein


--테이블 작성 및 데이터 입력
create table 편의점재고 (
	종류 varchar(20), 
	품명 varchar(20), 
	가격 int 
)

insert into 편의점재고 values
	('음료', '바나나우유', 800),
	('라면', '불닭볶음면', 1500),
	('음료', '초코우유', 1000),
	('라면', '틈새라면', 1200),
	('과자', '칸쵸', 500),
	('과자', '초코쿠키', 2500),
	('과일', '딸기', 3500),
	('과일', '파인애플', 4000),
	('잡화', '사인펜', 300),
	('잡화', '가위', 700)

create table 알바업무 (
	상태 varchar(20), 
	종류 varchar(20), 
	품명 varchar(20), 
	가격 int 
)

insert into 알바업무 values
	('유통기한', '과일', '파인애플', 4000), 
	('신상입고', '과자', '꼬북칩', 2000),
	('물건손상', '잡화', '가위', 700), 
	('유통기한', '과일', '딸기', 3500),
	('물건손상', '잡화', '사인펜', 300)

	
--테이블 확인용
select * from 편의점재고
select * from 알바업무


--문제
	--편의점재고 테이블은 현재 편의점에 있는 물건을 나타낸다.
	--알바업무 테이블은 아래와 같은 업무를 나타낸다.
		--신상입고 : 신상이 입고됐으니 편의점재고 테이블에 추가해야 함
		--유통기한 : 유통기한이 지난 것이니 알바가 해당 상품을 제거해야 함
		--물건손상 : 물건이 손상되어 새로 들였으니 기존 테이블 물건의 명칭 앞에 [재입고]를 넣어 줘야 함
	--1. 알바업무 테이블을 참고하여 편의점재고 테이블을 수정하는 쿼리문을 작성하시오.
	--2. 수정된 편의점재고 테이블과 동일한 새 테이블을 만들되, 새 테이블에 아래 조건에 맞게 '가성비' 열을 추가하시오.
		--음료는 1,000원 이상이면 가성비 열에 '비싼 음료', 아니면 '가성비 음료' 기입
		--라면은 1,500원 이상이면 가성비 열에 '비싼 라면', 아니면 '가성비 라면' 기입
		--과자는 2,000원 이상이면 가성비 열에 '비싼 과자', 아니면 '가성비 과자' 기입
		--그 외의 종류는 무조건 '정가' 기입

--정답
--1. 알바업무 테이블을 참고하여 편의점재고 테이블을 수정하는 쿼리문을 작성하시오.

--신상입고 insert
insert into 편의점재고
select B.종류, B.품명, B.가격
from 편의점재고 as A
right join 알바업무 as B
	on A.종류 = B.종류 and A.품명 = B.품명
where A.종류 is null
	and B.상태 = '신상입고'

--유통기한 초과 delete
delete 편의점재고
from 편의점재고 as A
inner join (
	select B.종류, B.품명, B.가격
	from 편의점재고 as A
	right join 알바업무 as B
		on A.종류 = B.종류
			and A.품명 = B.품명
	where A.종류 IS NOT NULL
		and B.상태 = '유통기한'
) B
	on A.종류 = B.종류
		and A.품명 = B.품명
		and A.가격 = B.가격

--물건손상 [재입고] update
update 편의점재고
set 품명 = '[재입고]' + A.품명
from 편의점재고 as A
inner join ( 
	select B.종류, B.품명, B.가격
	from 편의점재고 as A
	right join 알바업무 as B
		on A.종류 = B.종류
			and A.품명 = B.품명
	where A.종류 is not null
		and B.상태 = '물건손상' 
) B
	on A.종류 = B.종류
		and A.품명 = B.품명
		and A.가격 = B.가격


--2. 수정된 편의점재고를 바탕으로 새 테이블을 만들되,
	--새 테이블에는 품명과 가격을 '바나나우유(800원)' 같은 형식으로 하나의 열로 합치고,
	--아래 조건에 맞는 '가성비' 열을 추가하시오.

select 품명 + '(' + convert(varchar, 가격) + '원)' as 품명_가격,
	(case
		when 종류 = '음료' and 가격 >= 1000 then '비싼 음료'
		when 종류 = '음료' and 가격 < 1000 then '가성비 음료'
		when 종류 = '라면' and 가격 >= 1500 then '비싼 라면'
		when 종류 = '라면' and 가격 < 1500 then '가성비 라면'
		when 종류 = '과자' and 가격 < 2000 then '가성비 과자'
		when 종류 = '과자' and 가격 >= 2000 then '비싼 과자'
		else '정가'
	end) as 가성비
into 편의점재고_가성비
from 편의점재고

--편의점재고_가성비 테이블 확인용
select * from 편의점재고_가성비


--테이블 제거용
--drop table 편의점재고
--drop table 편의점재고_가성비
--drop table 알바업무